Practical 7
Aim: Write a Java program to demonstrate the connections to MongoDB
Q1) Insert
Code:
package nosqlpr7;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.MongoClient;
import org.bson.Document;

public class NOSQLPR7 {
    public static void main(String[] args){
		MongoClient mongo=new MongoClient("localhost",27017);
		System.out.println("connected to the database successfully:");
		MongoDatabase database=mongo.getDatabase("TYCS");
				MongoCollection<Document>collection=database.getCollection("STUDENT_COL");
		System.out.println("Collection STUDENT_COL selected successfully");		
		Document document=new Document();
		document.append("ID",1);
		document.append("Rollno",248637);
		document.append("age",19);
		document.append("college","Mulund College of Commerce");
		collection.insertOne(document);
		System.out.println("Document inserted Successfully");
    }
}

Output:
 
 

Q2) Retrieve
Code:
import com.mongodb.client.MongoCollection;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoDatabase;
import com.mongodb.MongoClient;
import org.bson.Document;
import java.util.Iterator;
public class retrieve {
    public static void main(String[] args){
        MongoClient mongo = new MongoClient("localhost", 27017);
        System.out.println("Connected to the database successfully:");
        MongoDatabase database = mongo.getDatabase("TYCS");
        MongoCollection<Document> collection = database.getCollection("STUDENT_COL");
        System.out.println("Collection TYCSCOLL selected successfully");
       FindIterable<Document> iterDoc = collection.find();
      Iterator it = iterDoc.iterator();
      while (it.hasNext()) {
         System.out.println(it.next());
      }
        mongo.close();
    }
}

Output:
 
Q3) Update
Code:
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.MongoClient;
import org.bson.Document;
import com.mongodb.client.model.*;

public class update {
        public static void main(String[] args) {
        MongoClient mongo = new MongoClient("localhost", 27017);
        System.out.println("Connected to the database successfully:");
        MongoDatabase database = mongo.getDatabase("TYCS");
        MongoCollection<Document> collection = database.getCollection("STUDENT_COL");
        System.out.println("Collection TYCSCOLL selected successfully");

        Document filter = new Document("Rollno", 248637);
        Document updateDoc = new Document("$set", new Document("age", 22));
        collection.updateOne(filter, updateDoc);
        System.out.println("Document updated Successfully");
    }
}

Output:
 
 
Q4) Delete
Code:
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.MongoClient;
import org.bson.Document;
import com.mongodb.client.model.Filters;

public class Delete {
    public static void main(String[] args) {
        MongoClient mongo = new MongoClient("localhost", 27017);
        System.out.println("Connected to the database successfully:");
        MongoDatabase database = mongo.getDatabase("TYCS");
        MongoCollection<Document> collection = database.getCollection("STUDENT_COL");
        System.out.println("Collection STUDENT COL selected successfully");
        Document filter = new Document("Rollno", 248637);
        collection.deleteMany(filter);
        System.out.println("Document deleted Successfully");
    }
}

Output:
 
 